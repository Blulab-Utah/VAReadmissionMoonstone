{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww17540\viewh9580\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
STRUCTURE OF DISTRIBUTION:\
\
1- tsl.properties:  File containing startup parameters.  Please note that the current parameters are set up to use a grammar and ontology designed to analyze social risk factors for the R01 project with Dartmouth and Vanderbilt.  (Currently under development and frankly, not very far along.)  The grammar is AMIR01Grammar and the ontology is NEWMetaLinguisticAMIR01Ontology.\
\
The parameters you may want to edit include:\
\
SelectedGrammar:  semantic grammar to be used\
\
ontology:  ontology definition file to be used\
\
UseWorkbenchInMoonstone:  Boolean value indicating whether to initialize the Evaluation Workbench, used for statistical analysis of pairs of annotation sets, along with Moonstone GUI tool.  If Moonstone is used just for annotation, this can be set to False.\
\
(Note:  The following parameters require directory pathnames, and only apply if UseWorkbenchInMoonstone is True.  If the pathname is not absolute, it is assumed to be relative to the top of the Moonstone distribution folder.)\
\
WorkbenchKnowtatorSchemaFile:  Path of the file containing the EHost project schema (xml format).\
\
TextInputDirectory:  Location of document corpus.\
\
ResultsOutputDirectory:  Directory where Moonstone annotations are to be stored.\
\
AnnotationInputDirectoryFirstAnnotator:  Directory containing annotations (one annotation file per corpus document), to be used as gold or reference standard.\
\
AnnotationInputDirectorySecondAnnotator:  Directory containing annotations (one annotation file per corpus document), to be compared against the gold standard.  If Moonstone annotations are to be used as comparison set, this pathname can be the same as ResultsOutputDirectory.\
\
2. GrammarRules:  This folder contains grammars for different NLP tasks.\
\
3. MoonstoneDemo.jar.  Runnable Moonstone jar file. \
\
4. MoonstoneTutorial1.pptx:  Simple tutorial for using the Moonstone GUI tool to create and test some simple grammar rules having to do with the social risk factor "LivingAlone".   To use this tutorial, you need to reference the "DemoGrammar" grammar and "DemoOntology" ontology in tsl.properties.\
\
5. resources:  Folder containing various file resources, including the ontology definition files.\
\
HOW TO STARTUP THE MOONSTONE GUI:\
\
Edit tsl.properties if necessary, then either open a file explorer app and double-click on the MoonstoneDemo.jar icon, or else open a shell or terminal app, move to the location of the distribution folder and type "java -jar MoonstoneDemo.jar".\
\
If you do not edit tsl.properties, the MoonstoneGUI will be initialized for the Dartmouth R01 project.\
\
To parse a sentence, type the sentence into the top text panel of the GUI, then select Interpretation->Get Interpreted Pattern Analysis Annotations.  The parse tree is displayed in the center panel.  If you select a node in this tree, you will see the grammar rule definition in the lower panel.  You can also select Rules->View Selected Rule In Text Editor to pop up an editable copy of the file containing the grammar rule.  If you edit the rule, you can reinitialize the grammar by selecting Rules->Reload Rules From File.\
\
HOW TO ANNOTATE A CORPUS OF DOCUMENTS:\
\
In tsl.properties, WorkbenchKnowtatorSchemaFile, TextInputDirectory and ResultsOutputDirectory must be appropriately set.  Startup the Moonstone GUI, then select the menu item Projects -> Analyze Corpus - Output EHost XML.\
\
HOW TO EXIT THE MOONSTONE GUI:\
\
Select Operations -> Exit Rule Builder\
\
\
}